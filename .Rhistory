canid_occ <- canid_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
canid_occ <- canid_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
canid_occ
canid_occ <- ggplot(canids, aes( species, ymin = maxage, ymax=minage, colour = genus))
canid_occ <- canid_occ + geom_linerange()
canid_occ <- canid_occ + theme(legend.position="none") #gets rid of legend
canid_occ <- canid_occ + coord_flip() #flips the coordinats horizontally
canid_occ <- canid_occ +  theme(axis.text.y = element_text(size=3)) # resizes text
canid_occ <- canid_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
canid_occ <- canid_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
canid_occ <- canid_occ + labs(title = "Canid Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
canid_occ
ggsave(filename = "canid-occ.pdf", plot = canid_occ)
print("Canids")
NROW(canid_occ)
NCOL(canid_occ)
NCOL(canids)
nrow(canids)
library(ggplot2)
setwd("/home/eeb177-student/Desktop/eeb-177/homework")
canids <- read.csv("/home/eeb177-student/Desktop/eeb-177/homework/canid-ranges.csv", header =F, as.is = T)
names(canids) <- c("genus", "species", "minage", "maxage")
head(canids)
#this gives us the data in a nice form for R
canids
list_of_genera <- unique(canids$genus)
list_of_genera
list_of_genera <- unique(canids$genus)
length(list_of_genera)
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
which.max(canids$duration)
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
canids[max_duration_taxa,1]
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
canids[max_duration_taxa,2] #use this to call the appropriate taxa within the data set
names(nautilaceae) <- c("genus", "species", "minage", "maxage")
nautilaceae <- read.csv("/home/eeb177-student/Desktop/eeb-177/homework/nautilaceae-range.csv", header =F, as.is = T)
names(nautilaceae) <- c("genus", "species", "minage", "maxage")
head(nautilaceae)
nautilaceae_occ <- ggplot(nautilaceae, aes( species, ymin = maxage, ymax=minage, colour = genus))
nautilaceae_occ <- nautilaceae_occ + geom_linerange()
nautilaceae_occ <- nautilaceae_occ + theme(legend.position="none") #gets rid of legend
nautilaceae_occ <- nautilaceae_occ + coord_flip() #flips the coordinats horizontally
nautilaceae_occ <- nautilaceae_occ +  theme(axis.text.y = element_text(size=3)) # resizes text
nautilaceae_occ <- nautilaceae_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
# nautilaceae_occ <- nautilaceae_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
#`nautilaceae_occ <- nautilaceae_occ + labs(title = "Nautilaceae Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
nautilaceae_occ
nautilaceae_occ <- ggplot(nautilaceae, aes( species, ymin = maxage, ymax=minage, colour = genus))
nautilaceae_occ <- nautilaceae_occ + geom_linerange()
nautilaceae_occ <- nautilaceae_occ + theme(legend.position="none") #gets rid of legend
nautilaceae_occ <- nautilaceae_occ + coord_flip() #flips the coordinats horizontally
nautilaceae_occ <- nautilaceae_occ +  theme(axis.text.y = element_text(size=3)) # resizes text
nautilaceae_occ <- nautilaceae_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
# nautilaceae_occ <- nautilaceae_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
nautilaceae_occ <- nautilaceae_occ + labs(title = "Nautilaceae Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
nautilaceae_occ
ggsave(filename = "nautilaceae_occ.pdf", plot = nautilaceae_occ)
nautilaceae_occ <- ggplot(nautilaceae, aes( species, ymin = maxage, ymax=minage, colour = genus))
nautilaceae_occ <- nautilaceae_occ + geom_linerange()
nautilaceae_occ <- nautilaceae_occ + theme(legend.position="none") #gets rid of legend
nautilaceae_occ <- nautilaceae_occ + coord_flip() #flips the coordinats horizontally
nautilaceae_occ <- nautilaceae_occ +  theme(axis.text.y = element_text(size=2)) # resizes text
nautilaceae_occ <- nautilaceae_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
# nautilaceae_occ <- nautilaceae_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
nautilaceae_occ <- nautilaceae_occ + labs(title = "Nautilaceae Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
nautilaceae_occ
ggsave(filename = "nautilaceae_occ.pdf", plot = nautilaceae_occ)
nautilaceae_occ <- ggplot(nautilaceae, aes( species, ymin = maxage, ymax=minage, colour = genus))
nautilaceae_occ <- nautilaceae_occ + geom_linerange()
nautilaceae_occ <- nautilaceae_occ + theme(legend.position="none") #gets rid of legend
nautilaceae_occ <- nautilaceae_occ + coord_flip() #flips the coordinats horizontally
nautilaceae_occ <- nautilaceae_occ +  theme(axis.text.y = element_text(size=1)) # resizes text
nautilaceae_occ <- nautilaceae_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
# nautilaceae_occ <- nautilaceae_occ + scale_y_continuous(limits=c(0, 40), expand = c(0, 0), breaks=c(0, 10, 20, 30, 40)) # gets rid of space on right and left of the graph to make the graph itself larger
nautilaceae_occ <- nautilaceae_occ + labs(title = "Nautilaceae Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
nautilaceae_occ
ggsave(filename = "nautilaceae_occ.pdf", plot = nautilaceae_occ)
nautilaceae_occ <- ggplot(nautilaceae, aes( species, ymin = maxage, ymax=minage, colour = genus))
nautilaceae_occ <- nautilaceae_occ + geom_linerange()
nautilaceae_occ <- nautilaceae_occ + theme(legend.position="none") #gets rid of legend
nautilaceae_occ <- nautilaceae_occ + coord_flip() #flips the coordinats horizontally
nautilaceae_occ <- nautilaceae_occ +  theme(axis.text.y = element_text(size=1)) # resizes text
nautilaceae_occ <- nautilaceae_occ + theme(axis.ticks.y=element_blank()) # gets rid of tick marks on y axis
nautilaceae_occ <- nautilaceae_occ + scale_y_continuous(limits=c(0, 250), expand = c(0, 0), breaks=c(0, 50, 100, 150, 200, 250)) # gets rid of space on right and left of the graph to make the graph itself larger
nautilaceae_occ <- nautilaceae_occ + labs(title = "Nautilaceae Fossil Occurrences", x = "Species", y = "Ma ago") + theme(plot.title = element_text(hjust = 0.5, size=22, face = "bold"), axis.title =element_text(size=20))  # adds titles and labels to the graph
nautilaceae_occ
ggsave(filename = "nautilaceae_occ.pdf", plot = nautilaceae_occ)
print("Nautilaceae")
nrow(nautilaceae)
list_of_genera <- unique(nautilaceae$genus)
length(list_of_genera)
print(nrow(nautilaceae) + "unique species"")
# 471
print(nrow(nautilaceae) + "unique species")
print("Unique Species:")
print(nrow(nautilaceae))
# 471
list_of_genera <- unique(nautilaceae$genus)
print("Number of Genera:")
length(list_of_genera)
# 39
nautilaceae$duration <- nautilaceae$maxage - nautilaceae$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(nautilaceae$duration)
#this gives the row of the max value
nautilaceae[max_duration_taxa,2]
#use this to call the appropriate taxa within the data frame
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
print(canids[max_duration_taxa,2])
#use this to call the appropriate taxa within the data frame
nautilaceae$duration <- nautilaceae$maxage - nautilaceae$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(nautilaceae$duration)
#this gives the row of the max value
print(nautilaceae[max_duration_taxa,2])
print(nautilaceae[max_duration_taxa,5])
#use this to call the appropriate taxa within the data frame
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
print(canids[max_duration_taxa,2])
print(canids[max_duration_taxa,5])
#use this to call the appropriate taxa within the data frame
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
cat(canids[max_duration_taxa,2], canids[max_duration_taxa,5])
#use this to call the appropriate taxa within the data frame
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
cat(canids[max_duration_taxa,2], canids[max_duration_taxa,5], Ma)
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
cat(canids[max_duration_taxa,2], canids[max_duration_taxa,5], "Ma"")
#use this to call the appropriate taxa within the data frame
canids$duration <- canids$maxage - canids$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(canids$duration)
#this gives the row of the max value
cat(canids[max_duration_taxa,2], canids[max_duration_taxa,5], "Ma")
#use this to call the appropriate taxa within the data frame
nautilaceae$duration <- nautilaceae$maxage - nautilaceae$minage
#gives the data frame a new row with the duration
max_duration_taxa<- which.max(nautilaceae$duration)
#this gives the row of the max value
cat(nautilaceae[max_duration_taxa,2], nautilaceae[max_duration_taxa,5], "Ma")
#use this to call the appropriate taxa within the data frame
list_of_genera <- unique(nautilaceae$genus)
cat("Number of Genera:", length(list_of_genera))
# 39
cat("Unique Species:", nrow(nautilaceae))
# 471
cat("Unique species", nrow(canids))
# 172
list_of_genera <- unique(canids$genus)
cat("Number of Genera:", length(list_of_genera))
# 58
age <- c(2,3,5,12)
cats
cats <- read.csv(file = "feline-data")
cats <- read.csv(file = "feline-data.csv")
age <- c(2,3,5,12)
cats
cats <- read.csv(file = "feline-data.csv")
age <- c(2,3,5,12)
cats
cats <- read.csv(file = "feline-data.csv")
age <- c(2,3,5,12)
cats
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
cats
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
cats
newRow <- list("tortoiseshell", 3.3, TRUE, 9)
cats <- rbind(cats, newRow)
levels(cats$coat)
levels(cats$coat)
levels(cats$coat) <- c(levels(cats$coat), 'tortoiseshell')
cats <- rbind(cats, list("tortoiseshell", 3.3, TRUE, 9))
levels(cats$coat)
levels(cats$coat) <- c(levels(cats$coat), 'tortoiseshell')
cats <- rbind(cats, list("tortoiseshell", 3.3, TRUE, 9))
cats
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
levels(cats$coat)
levels(cats$coat) <- c(levels(cats$coat), 'tortoiseshell')
cats <- rbind(cats, list("tortoiseshell", 3.3, TRUE, 9))
cats
str(cats)
cats$coat <- as.character(cats$coat)
str(cats)
cats <- read.csv(file = "feline-data.csv")
age <- c(4,5,8)
cats <- cbind(cats, age)
newRow <- list("tortoiseshell", 3.3, TRUE, 9)
cats <- rbind(cats, newRow)
levels(cats$coat)
levels(cats$coat) <- c(levels(cats$coat), 'tortoiseshell')
cats <- rbind(cats, list("tortoiseshell", 3.3, TRUE, 9))
cats
str(cats)
cats$coat <- as.character(cats$coat)
str(cats)
cats[-4,]
cats <- na.omit(cats)
cats <- rbind(cats, cats)
cats
rownames(cats) <- NULL
cats
df <- data.frame(first_name = c("Hayden"), last_name = c("Speck"), lucky_number = c(657890))
df <- data.frame(first_name = c("Hayden"), last_name = c("Speck"), lucky_number = c(657890), stringsAsFactors = F)
df <- rbind(df, list("Jean-Erique", "Namme", 0))
df <- cbind(df, coffee = c(FALSE, TRUE))
newRow =
df <- data.frame(first_name = c("Hayden"), last_name = c("Speck"), lucky_number = c(657890), stringsAsFactors = F)
df <- rbind(df, list("Jean-Erique", "Namme", 0))
df <- cbind(df, coffee = c(FALSE, TRUE))
df <- data.frame(first_name = c("Hayden"), last_name = c("Speck"), lucky_number = c(657890), stringsAsFactors = F)
df <- rbind(df, list("Jean-Erique", "Namme", 0))
df <- cbind(df, coffee = c(FALSE, TRUE))
df
gapminder <- read.csv("gapminder-FiveYearData.csv")
str(gapminder)
typeof(gapminder$country)
str(gapminder$country)
length(gapminder)
typeof(gapminder)
nrow(gapminder)
ncol(gapminder)
dim(gapminder)
colnames(gapminder)
head(gapminder)
source(file = "~/scripts/load-gapminder.R")
source(file = "~/scripts/load-gapminder.R")
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x
print(x[1])
print(x[4])
print(x[1])
print(x[4])
print(x[c(1,3)])
x[1:4]
print(x[c(1,1,3)])
print(x[6])
print(x[c(1,1,3)])
print(x[6])
x[0]
print(x[-2])
print(x[c(-1,-5)])
x<-x[-4]
x
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
print(x[2:4])
print(x[c(-1,-5)])
print(x[2,3,4])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
print(x[2:4])
print(x[c(-1,-5)])
print(x[c(2,3,4)])
x[c("a", "c")]
x[-which(names(x) == "a")]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
x[-which(names(x) == "g")]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
x[-which(names(x) == "f")]
#expect a null result
#instead got a named numeric(0)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
test_type <- x[-which(names(x) == "f")]
#expect a null result
#instead got a named numeric(0)
type(test_type)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
test_type <- x[-which(names(x) == "f")]
#expect a null result
#instead got a named numeric(0)
typ(test_type)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x)
test_type <- x[-which(names(x) == "f")]
#expect a null result
#instead got a named numeric(0)
class(test_type)
x[-which(names(x) == "g")]
names(x) == c('a', 'c')```
names(x) == c('a', 'c')
names(x) == c('a', 'c')
x[c(TRUE, TRUE, FALSE, FALSE)]
x <- 1:3
x
x <- 1:3
names(x) <- c("a", "a", "a")
x
names(x) == c('a', 'c')
x[c(TRUE, TRUE, FALSE, FALSE)]
print(x[c(TRUE, TRUE, FALSE, FALSE)])
print(x[c(TRUE, FALSE)])
x[x>7]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(x <7 and x>4)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(x <7 AND x>4)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(x<7 AND x>4)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(i %in% i<7 AND i>4)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(4<x<7])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(4<x<7)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(x > 4 AND x < 7)],)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which(x > 4 AND x < 7)])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
print(x[which((x > 4) AND (x < 7))])
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x_subset <- x[x > 4 AND x < 7]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x_subset <- x[x<7 AND 4<x]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x_subset <- x[x<7 & 4<x]
print(x_subset)
f <- factor(c("a", "a", "b", "c", "c", "d"))
f[f == "a"]
f[f %in% c("b", "c")]
f[1:3]
set.seed(1)
m <- matrix(rnorm(6*4), ncol=4, nrow=6)
m[3:4, c(3,1)]
m[, c(3,4)]
m[3, , drop=FALSE]
m[, c(3,6)]
m[5]
matrix(1:6, nrow=2, ncol=3)
matrix(1:6, nrow=2, ncol=3, byrow=TRUE)
print(m)
m <- matrix(1:18, nrow=3, ncol=6)
print(m)
m[2,4,2,5]
m[2:5]
m[4:5,2]
m[2,c(4,5)]
xlist <- list(a = "Software Carpentry", b = 1:10, data = head(iris))
xlist[1]
xlist[1:2]
xlist[[1]]
```{r}
xlist[[1:2]]
xlist[[-1]]
xlist[["a"]]
xlist$data
xlist["b"]
xlist <- list(a = "Software Carpentry", b = 1:10, data = head(iris))
xlist["b"]
xlist["b"][2]
xlist["b",2]
xlist[[2]]
xlist <- list(a = "Software Carpentry", b = 1:10, data = head(iris))
blist=xlist["b"]
blist[2]
xlist <- list(a = "Software Carpentry", b = 1:10, data = head(iris))
blist=xlist["b"]
blist[1]
xlist$b[2]
mod <- aov(pop ~ lifeExp, data=gapminder)
mod <- aov(pop ~ lifeExp, data=gapminder)
attributes(mod)
mod <- aov(pop ~ lifeExp, data=gapminder)
attributes(mod)
mod$names["residuals"]
mod <- aov(pop ~ lifeExp, data=gapminder)
attributes(mod)
mod$names["residuals"]
mod$df.residual
head(gapminder[3])
head(gapminder[["lifeExp"]])
head(gapminder$year)
gapminder[1:3,]
gapminder[3,]
gapminder[gapminder$year = 1957,]
gapminder[gapminder$year[1957,]]
gapminder$year[1957,]
gapminder$year[1957]
gapminder[gapminder$year = 1957,]
gapminder[gapminder$year == 1957,]
gapminder[,-1:4]
gapminder[,-c(1:4)]
gapminder[, gapminder$lifeExp > 80]
gapminder[gapminder$lifeExp > 80]
gapminder[gapminder$lifeExp > 80,]
#gapminder[1, 4, 5]
gapminder[1, c(4, 5)]
gapminder[gapminder$year == 2002 | 2007,]
gapminder[gapminder$year == (2002 | 2007),]
gapminder[gapminder$year == 2002 | gapminder$year == 2007,]
gapminder[1:20]
gapminder_small <- gapminder[1:9| 19:23,]
gapminder_small <- gapminder[1:9 & 19:23,]
gapminder_small <- gapminder[c(1:9, 19:23),]
gapminder_small
library("ggplot2")
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = year)) + geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp)) + geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point()
#expect higher in developed world (Europe, N. Am, Australia)
#expect lower in developing world and areas struggling with disease, e.g. Africa
ggplot(data = gapminder, aes(x = year, y = lifeExp, color = continent)) + geom_point()
ggplot(data = gapminder, aes(x=year, y=lifeExp, by=country, color=continent)) +
geom_line()
ggplot(data = gapminder, aes(x=year, y=lifeExp, by=country, color=continent)) +
geom_line() + geom_point()
ggplot(data = gapminder, aes(x=year, y=lifeExp, by=country)) +
geom_line(aes(color=continent)) + geom_point()
ggplot(data = gapminder, aes(x=year, y=lifeExp, by=country)) +
geom_point() + geom_line(aes(color=continent))
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color=continent)) +
geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5) + scale_x_log10()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point() + scale_x_log10() + geom_smooth(method="lm")
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point() + scale_x_log10() + geom_smooth(method="lm", size=1.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size=0.5) + scale_x_log10() + geom_smooth(method="lm", size=1.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size=0.5, color = "red") + scale_x_log10() + geom_smooth(method="lm", size=1.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size=0.5, aes(shape=continent, color = continent)) + scale_x_log10() + geom_smooth(method="lm", size=1.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(size=0.5, aes(shape=continent) + scale_x_log10() + geom_smooth(method="lm", size=1.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(size=0.5, aes(shape=continent)) + scale_x_log10() + geom_smooth(method="lm", size=1.5)
starts.with <- substr(gapminder$country, start = 1, stop = 1)
az.countries <- gapminder[starts.with %in% c("A", "Z"), ]
ggplot(data = az.countries, aes(x = year, y = lifeExp, color=continent)) +
geom_line() + facet_wrap( ~ country)
ggplot(data = az.countries, aes(x = year, y = lifeExp, color=continent)) +
geom_line() + facet_wrap( ~ country) +
xlab("Year") + ylab("Life expectancy") + ggtitle("Figure 1") +
scale_colour_discrete(name="Continent") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
ggplot(data = gapminder, aes(x= gdpPerCap, fill= continent))
ggplot(data = gapminder, aes(x= gdpPercap, fill= continent))
ggplot(data = gapminder, aes(x= gdpPercap, fill= continent)) + geom_density(alpha =0.5)
ggplot(data = gapminder, aes(x= gdpPercap, fill= continent)) + geom_density(alpha =0.5) +scale_x_log10()
ggplot(data = gapminder, aes(x= gdpPercap, color= continent)) + geom_density(alpha =0.5) +scale_x_log10()
ggplot(data = gapminder, aes(x= gdpPercap, fill= continent, color =continent)) + geom_density(alpha =0.5) +scale_x_log10()
ggplot(data = gapminder, aes(x= gdpPercap, fill= continent, color =continent)) + geom_density(alpha =0.5) +scale_x_log10() + facet_wrap( ~year)
knitr::opts_chunk$set(echo = TRUE)
m[, c(3,5)]
